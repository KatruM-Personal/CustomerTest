@using CustomerModels.Models
@model Customer

<h1>Delete Customer</h1>

<form id="deleteForm" asp-action="Delete">
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" readonly /> <!-- readonly attribute added -->
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" readonly /> <!-- readonly attribute added -->
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Phone"></label>
        <input asp-for="Phone" class="form-control" readonly /> <!-- readonly attribute added -->
        <span asp-validation-for="Phone" class="text-danger"></span>
    </div>
    <button type="button" id="deleteButton" class="btn btn-danger" style="margin-top:5px">Delete</button> <!-- Changed type to button -->
</form>

<a href="/Customers">Back to List</a>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteButton = document.getElementById('deleteButton');

            deleteButton.addEventListener('click', function () {
                if (confirm('Are you sure you want to delete this customer?')) {
                    // Disable form elements
                    var formInputs = document.querySelectorAll('#deleteForm input');
                    formInputs.forEach(function (input) {
                        input.setAttribute('readonly', 'true');
                    });

                    deleteButton.setAttribute('disabled', 'true'); // Disable delete button after confirmation

                    // Submit the form
                    document.getElementById('deleteForm').submit();
                }
            });
        });
    </script>
}